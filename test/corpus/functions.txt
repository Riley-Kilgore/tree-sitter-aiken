================================================================================
Basic Function Test - Int
================================================================================

pub fn five () {
    25
}

--------------------------------------------------------------------------------

(source_file
  (function
    (identifier)
    (function_arguments)
    (expression (int (base10)))
  ))

================================================================================
Basic Function Test - List
================================================================================

fn list () {
    [10, 25]
}

--------------------------------------------------------------------------------

(source_file
  (function
    (identifier)
    (function_arguments)
    (expression
      (list
        (expression (int (base10)))
        (expression (int (base10)))
      )
    )
  ))

================================================================================
Basic Function Test - Sequence
================================================================================

fn sequence () {
    foo(bar(x))
}

--------------------------------------------------------------------------------

(source_file
  (function
    (identifier)
    (function_arguments)
    (expression
      (call
        (identifier)
        (call_arguments
          (expression (call 
            (identifier)
            (call_arguments (expression (identifier))))))
      )
    )
  ))

================================================================================
Basic Function Test - Sequence with `.` access
================================================================================

fn sequence () {
    nike.foo(bar(x))
}

--------------------------------------------------------------------------------

(source_file
  (function
    (identifier)
    (function_arguments)
    (expression
      (call
        (field_access (identifier) (identifier))
        (call_arguments
          (expression (call 
            (identifier)
            (call_arguments (expression (identifier))))))
      )
    )
  ))

================================================================================
Basic Function Test - Sequence with `..` list in pattern
================================================================================

pub fn choice(self: List<Option<a>>) -> Option<a> {
  when self is {
    [] -> None
    [head, ..others] ->
      when head is {
        None -> choice(others)
        _ -> head
      }
  }
}

--------------------------------------------------------------------------------

(source_file
      (function
        (identifier)
        (function_arguments
          (function_argument
            (identifier)
            (type_definition
              (type_identifier)
              (type_argument
                type_argument: (type_definition
                  (type_identifier)
                  (type_argument
                    type_argument: (identifier)))))))
        (type_definition
          (type_identifier)
          (type_argument
            type_argument: (identifier)))
        (expression
          (when
            (expression
              (identifier))
            (when_case
              (list)
              (expression
                (match_pattern
                  (type_identifier))))
            (when_case
              (list
                (expression
                  (identifier))
                (identifier))
              (expression
                (when
                  (expression
                    (identifier))
                  (when_case
                    (match_pattern
                      (type_identifier))
                    (expression
                      (call
                        (identifier)
                        (call_arguments
                          (expression
                            (identifier))))))
                  (when_case
                    (discard)
                    (expression
                      (identifier))))))))))